<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2022CSPÁ¨¨‰∫åËΩÆËÆ§ËØÅËß£Êûêüí≠üí≠</title>
      <link href="/2023/01/02/2022CSP-J%E7%AC%AC%E4%BA%8C%E8%BD%AE%E8%AE%A4%E8%AF%81%E8%A7%A3%E6%9E%90/"/>
      <url>/2023/01/02/2022CSP-J%E7%AC%AC%E4%BA%8C%E8%BD%AE%E8%AE%A4%E8%AF%81%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="25778ebf6fbbe6af721147cdd09dcc2bc156eefbae66875fd7fdcdbf3ec33078"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">ËØ∑ËæìÂÖ•Ê≠£Á°ÆÂØÜÁ†ÅÈòÖËØªÊñáÁ´†</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> NOIP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NOIPÊôÆÂèäÁªÑ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CppËØ≠Ê≥ïÂü∫Á°ÄÊÄªÁªì</title>
      <link href="/2022/11/29/Cpp%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/11/29/Cpp%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="ÂÖ•Èó®"><a href="#ÂÖ•Èó®" class="headerlink" title="ÂÖ•Èó®"></a>ÂÖ•Èó®</h1><p><strong>ÊâìÂºÄÁºñËØëËΩØ‰ª∂ÔºåÂá∫Áé∞ÁöÑÁ¨¨‰∏Ä‰∏™Á®ãÂ∫èËÇØÂÆöÊòØHello Word!</strong> </p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;  <span class="comment">//C++ÁöÑÂëΩÂêçÁ©∫Èó¥ÔºåÂèØ‰ª•ËÆ©Âú®‰∏çÂêåÂëΩÂêçÁ©∫Èó¥‰∏≠ÁöÑÂáΩÊï∞ÂêçÊàñÂèòÈáèÂêçÁõ∏Âêå</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello world!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ËØ≠Ê≥ïÂü∫Á°Ä"><a href="#ËØ≠Ê≥ïÂü∫Á°Ä" class="headerlink" title="ËØ≠Ê≥ïÂü∫Á°Ä"></a>ËØ≠Ê≥ïÂü∫Á°Ä</h2><blockquote><p><font color="red"><strong>ÂèòÈáèÁöÑÂÆö‰πâ:</strong></font><strong>ÂèòÈáèÂøÖÈ°ªÂÖàÂÆö‰πâÔºåÊâçÂèØ‰ª•‰ΩøÁî®„ÄÇ‰∏çËÉΩÈáçÂêç„ÄÇ</strong></p></blockquote><p><font color="Bluee"><strong>ÂèòÈáèÂÆö‰πâÁöÑÊñπÂºè:</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> c=a,d=<span class="number">10</span>/<span class="number">2</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/C++1.jpg" alt="Âú®ËøôÈáåÊèíÂÖ•ÂõæÁâáÊèèËø∞"></p><h2 id="ËæìÂÖ•ËæìÂá∫"><a href="#ËæìÂÖ•ËæìÂá∫" class="headerlink" title="ËæìÂÖ•ËæìÂá∫"></a>ËæìÂÖ•ËæìÂá∫</h2><p><font color="Bluee"><strong>Êï¥Êï∞ÁöÑËæìÂÖ•ËæìÂá∫Ôºö</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    cout&lt;&lt;a+b&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>Â≠óÁ¨¶‰∏≤ÁöÑËæìÂÖ•ËæìÂá∫Ôºö</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string str;</span><br><span class="line">    cin&gt;&gt;str;</span><br><span class="line">    cout&lt;&lt;str;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ËæìÂÖ•ËæìÂá∫Â§ö‰∏™‰∏çÂêåÁ±ªÂûãÁöÑÂèòÈáèÔºö</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    string str;</span><br><span class="line">    cin&gt;&gt;a;</span><br><span class="line">    cin&gt;&gt;b&gt;&gt;str;</span><br><span class="line">    cout&lt;&lt;str&lt;&lt;<span class="string">&quot; !!! &quot;</span>&lt;&lt;a+b&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Ë°®ËææÂºè"><a href="#Ë°®ËææÂºè" class="headerlink" title="Ë°®ËææÂºè"></a>Ë°®ËææÂºè</h2><p><font color="Bluee"><strong>Êï¥Êï∞ÁöÑÂä†Âáè‰πòÈô§ÂõõÂàôËøêÁÆóÔºö</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">6</span>+<span class="number">3</span>*<span class="number">4</span>/<span class="number">2</span><span class="number">-2</span>;</span><br><span class="line">    cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    <span class="type">int</span> b=a*<span class="number">10</span>+<span class="number">5</span>/<span class="number">2</span>;</span><br><span class="line">    cout&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="number">23</span>*<span class="number">56</span><span class="number">-78</span>/<span class="number">3</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/C++2.jpg" alt="Âú®ËøôÈáåÊèíÂÖ•ÂõæÁâáÊèèËø∞"><br><font color="Bluee"><strong>ÊµÆÁÇπÊï∞ÔºàÂ∞èÊï∞ÔºâÁöÑËøêÁÆóÔºö</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span> x=<span class="number">1.5</span>,y=<span class="number">3.2</span>;</span><br><span class="line">    cout&lt;&lt;x*y&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;x+y&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;x-y&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;x/y&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>Êï¥ÂûãÂèòÈáèÁöÑËá™Â¢û„ÄÅËá™ÂáèÔºö</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> b=a++;</span><br><span class="line">    cout&lt;&lt;a&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    <span class="type">int</span> c=++a;</span><br><span class="line">    cout&lt;&lt;a&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;c&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ÂèòÈáèÁöÑÁ±ªÂûãËΩ¨Êç¢Ôºö</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span> x=<span class="number">123.12</span>;</span><br><span class="line">    <span class="type">int</span> y=(<span class="type">int</span>)x;</span><br><span class="line">    cout&lt;&lt;x&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="PrintfËØ≠Âè•‰∏éÂà§Êñ≠ÁªìÊûÑ"><a href="#PrintfËØ≠Âè•‰∏éÂà§Êñ≠ÁªìÊûÑ" class="headerlink" title="PrintfËØ≠Âè•‰∏éÂà§Êñ≠ÁªìÊûÑ"></a>PrintfËØ≠Âè•‰∏éÂà§Êñ≠ÁªìÊûÑ</h1><h2 id="printfËæìÂá∫Ê†ºÂºè"><a href="#printfËæìÂá∫Ê†ºÂºè" class="headerlink" title="printfËæìÂá∫Ê†ºÂºè"></a>printfËæìÂá∫Ê†ºÂºè</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//Ê≥®ÊÑèÔºö‰ΩøÁî®printf Êó∂ÊúÄÂ•ΩÊ∑ªÂä†Â§¥Êñá‰ª∂ #include &lt;cstdio&gt;„ÄÇ</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Int„ÄÅfloat„ÄÅdouble„ÄÅcharÁ≠âÁ±ªÂûãÁöÑËæìÂá∫Ê†ºÂºèÔºö<br>(1)IntÔºö%d<br>(2)Float: %f, ÈªòËÆ§‰øùÁïô6‰ΩçÂ∞èÊï∞<br>(3)Double: %lfÔºå ÈªòËÆ§‰øùÁïô6‰ΩçÂ∞èÊï∞<br>(4)Char: %c, ÂõûËΩ¶‰πüÊòØ‰∏Ä‰∏™Â≠óÁ¨¶ÔºåÁî®‚Äô\n‚ÄôË°®Á§∫<br>(5)Float, doubleÁ≠âËæìÂá∫‰øùÁïôËã•Âπ≤‰ΩçÂ∞èÊï∞Êó∂Áî®Ôºö%.4f, %3lf</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">3</span>;</span><br><span class="line">    <span class="type">float</span> b=<span class="number">3.12345678</span>;</span><br><span class="line">    <span class="type">double</span> c=<span class="number">3.12345678</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%5d\n&quot;</span>,a);</span><br><span class="line"><span class="comment">// %8.3f, Ë°®Á§∫Ëøô‰∏™ÊµÆÁÇπÊï∞ÁöÑÊúÄÂ∞èÂÆΩÂ∫¶‰∏∫8Ôºå‰øùÁïô3‰ΩçÂ∞èÊï∞ÔºåÂΩìÂÆΩÂ∫¶‰∏çË∂≥Êó∂Âú®ÂâçÈù¢Ë°•Á©∫Ê†º„ÄÇ</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%8.3f\n&quot;</span>,b);</span><br><span class="line"><span class="comment">// %-8.3fÔºåË°®Á§∫ÊúÄÂ∞èÂÆΩÂ∫¶‰∏∫8Ôºå‰øùÁïô3‰ΩçÂ∞èÊï∞ÔºåÂΩìÂÆΩÂ∫¶‰∏çË∂≥Êó∂Âú®ÂêéÈù¢Ë°•‰∏äÁ©∫Ê†º</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%-8.3f\n&quot;</span>,b);</span><br><span class="line"><span class="comment">//%08.3f, Ë°®Á§∫ÊúÄÂ∞èÂÆΩÂ∫¶‰∏∫8Ôºå‰øùÁïô3‰ΩçÂ∞èÊï∞ÔºåÂΩìÂÆΩÂ∫¶‰∏çË∂≥Êó∂Âú®ÂâçÈù¢Ë°•‰∏ä0</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%08.3f\n&quot;</span>,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%7.3f\n&quot;</span>,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="if-ËØ≠Âè•"><a href="#if-ËØ≠Âè•" class="headerlink" title="if ËØ≠Âè•"></a>if ËØ≠Âè•</h2><blockquote><p>1.Âü∫Êú¨if-elseËØ≠Âè•ÔºåÂΩìÊù°‰ª∂ÊàêÁ´ãÊó∂ÔºåÊâßË°åÊüê‰∫õËØ≠Âè•ÔºõÂê¶ÂàôÊâßË°åÂè¶‰∏Ä‰∫õËØ≠Âè•„ÄÇ<br>2.Else ËØ≠Âè•ÂèØ‰ª•ÁúÅÁï•„ÄÇ<br>3.ÂΩìÂè™Êúâ‰∏ÄÊù°ËØ≠Âè•Êó∂ÔºåÂ§ßÊã¨Âè∑ÂèØ‰ª•ÁúÅÁï•„ÄÇ<br><font color="Bluee"><strong>Â∏∏Áî®ÊØîËæÉËøêÁÆóÁ¨¶</strong></font><br>(1) Â§ß‰∫é &gt;<br>(2) Â∞è‰∫é &lt;<br>(3) Â§ß‰∫éÁ≠â‰∫é &gt;&#x3D;<br>(4) Â∞è‰∫éÁ≠â‰∫é &lt;&#x3D;<br>(5) Á≠â‰∫é &#x3D;&#x3D;<br>(6) ‰∏çÁ≠â‰∫é !&#x3D;</p></blockquote><p><font color="red"><strong>Âà§Êñ≠Èó∞Âπ¥ÔºåÈó∞Âπ¥ËæìÂá∫YesÔºåÂèç‰πãËæìÂá∫No</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">    cin&gt;&gt;year;</span><br><span class="line">    <span class="keyword">if</span>(year%<span class="number">400</span>==<span class="number">0</span> || (year%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; year%<span class="number">100</span>))</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Âæ™ÁéØÁªìÊûÑ"><a href="#Âæ™ÁéØÁªìÊûÑ" class="headerlink" title="Âæ™ÁéØÁªìÊûÑ"></a>Âæ™ÁéØÁªìÊûÑ</h1><h2 id="whileÂæ™ÁéØ"><a href="#whileÂæ™ÁéØ" class="headerlink" title="whileÂæ™ÁéØ"></a>whileÂæ™ÁéØ</h2><blockquote><p>ÂèØ‰ª•ÁÆÄÂçïÁêÜËß£‰∏∫Âæ™ÁéØÁâàÁöÑifËØ≠Âè•„ÄÇIfËØ≠Âè•ÊòØÂà§Êñ≠‰∏ÄÊ¨°ÔºåÂ¶ÇÊûúÊù°‰ª∂ÊàêÁ´ãÔºåÂàôÊâßË°åÂêéÈù¢ÁöÑËØ≠Âè•ÔºõwhileÊòØÊØèÊ¨°Âà§Êñ≠ÔºåÂ¶ÇÊûúÊàêÁ´ãÔºåÂàôÊâßË°åÂæ™ÁéØ‰Ωì‰∏≠ÁöÑËØ≠Âè•ÔºåÂê¶ÂàôÂÅúÊ≠¢„ÄÇ</p></blockquote><p><font color="Bluee"><strong>Ê±ÇÊñêÊ≥¢ÈÇ£Â•ëÊï∞ÂàóÁöÑÁ¨¨nÈ°π„ÄÇf(1)&#x3D;1, f(2)&#x3D;1, f(3)&#x3D;2, f(n)&#x3D;f(n-1) + f(n-2)„ÄÇ</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">1</span>,b=<span class="number">1</span>,i=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> c=a+b;</span><br><span class="line">        a=b;</span><br><span class="line">        b=c;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;a&lt;&lt;endl; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Ê≠ªÂæ™ÁéØÔºöÂæ™ÁéØÊ∞∏‰πÖÊâßË°åÔºåÊó†Ê≥ïÁªìÊùü„ÄÇÊàë‰ª¨Ë¶ÅÈÅøÂÖçÂÜôÂá∫Ê≠ªÂæ™ÁéØ„ÄÇ</p></blockquote><h2 id="do-whileÂæ™ÁéØ"><a href="#do-whileÂæ™ÁéØ" class="headerlink" title="do whileÂæ™ÁéØ"></a>do whileÂæ™ÁéØ</h2><blockquote><p>do whileÂæ™ÁéØ‰∏çÂ∏∏Áî®„ÄÇ<br>do whileËØ≠Âè•‰∏éwhileËØ≠Âè•ÈùûÂ∏∏Áõ∏‰ºº„ÄÇÂîØ‰∏ÄÁöÑÂå∫Âà´ÊòØÔºådo whileËØ≠Âè•ÈôêÂà∂ÊÄßÂæ™ÁéØ‰ΩìÂêéÊ£ÄÊü•Êù°‰ª∂„ÄÇ‰∏çÁÆ°Êù°‰ª∂ÁöÑÂÄºÂ¶Ç‰ΩïÔºåÊàë‰ª¨ÈÉΩË¶ÅËá≥Â∞ëÊâßË°å‰∏ÄÊ¨°Âæ™ÁéØ„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;x!&quot;</span>&lt;&lt;endl;</span><br><span class="line">        x++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> y=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;y!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;<span class="keyword">while</span>(y&lt;<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="for-Âæ™ÁéØ"><a href="#for-Âæ™ÁéØ" class="headerlink" title="for Âæ™ÁéØ"></a>for Âæ™ÁéØ</h2><blockquote><p>Âü∫Êú¨ÊÄùÊÉ≥ÔºöÊääÊéßÂà∂Âæ™ÁéØÊ¨°Êï∞ÁöÑÂèòÈáè‰ªéÂæ™ÁéØ‰Ωì‰∏≠Ââ•Á¶ª„ÄÇ<br>for (init-statement : condition: expression)<br>{<br>    statement<br>}<br>init-statementÂèØ‰ª•ÊòØÂ£∞ÊòéËØ≠Âè•„ÄÅË°®ËææÂºè„ÄÅÁ©∫ËØ≠Âè•Ôºå‰∏ÄËà¨Áî®Êù•ÂàùÂßãÂåñÂæ™ÁéØÂèòÈáèÔºõ<br>condition ÊòØÊù°‰ª∂Ë°®ËææÂºèÔºåÂíåwhile‰∏≠ÁöÑÊù°‰ª∂Ë°®ËææÂºè‰ΩúÁî®‰∏ÄÊ†∑ÔºõÂèØ‰ª•‰∏∫Á©∫ÔºåÁ©∫ËØ≠Âè•Ë°®Á§∫true<br>expression ‰∏ÄËà¨Ë¥üË¥£‰øÆÊîπÂæ™ÁéØÂèòÈáèÔºåÂèØ‰ª•‰∏∫Á©∫<br>init-statementÂèØ‰ª•ÂÆö‰πâÂ§ö‰∏™ÂèòÈáèÔºåexpression‰πüÂèØ‰ª•‰øÆÊîπÂ§ö‰∏™ÂèòÈáè„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;++i)</span><br><span class="line">        cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Ë∑≥ËΩ¨ËØ≠Âè•"><a href="#Ë∑≥ËΩ¨ËØ≠Âè•" class="headerlink" title="Ë∑≥ËΩ¨ËØ≠Âè•"></a>Ë∑≥ËΩ¨ËØ≠Âè•</h2><blockquote><p>breakÂèØ‰ª•ÊèêÂâç‰ªéÂæ™ÁéØ‰∏≠ÈÄÄÂá∫Ôºå‰∏ÄËà¨‰∏éifËØ≠Âè•Êê≠ÈÖç„ÄÇ</p></blockquote><p><font color="Bluee"><strong>Âà§Êñ≠‰∏Ä‰∏™Â§ß‰∫é1ÁöÑÊï∞ÊòØÂê¶ÊòØË¥®Êï∞„ÄÇ</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">bool</span> is_prime=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            is_prime=<span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span>(is_prime) cout&lt;&lt;<span class="string">&quot;yes&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;no&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>continueÂèØ‰ª•Áõ¥Êé•Ë∑≥Âà∞ÂΩìÂâçÂæ™ÁéØ‰ΩìÁöÑÁªìÂ∞æ„ÄÇ‰ΩúÁî®‰∏éifËØ≠Âè•Á±ª‰ºº„ÄÇ</p></blockquote><p><font color="Bluee"><strong>Ê±Ç1~100‰∏≠ÊâÄÊúâÂÅ∂Êï∞ÁöÑÂíå„ÄÇ</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>) <span class="keyword">continue</span>;</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ÊâìÂç∞1~100‰∏≠ÁöÑÊâÄÊúâË¥®Êï∞</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">bool</span> is_prime=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">2</span>;j&lt;i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i%j==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                is_prime=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(is_prime) cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ËæìÂÖ•‰∏Ä‰∏™nÔºåÊâìÂç∞nÈò∂Ëè±ÂΩ¢„ÄÇnÊòØÂ•áÊï∞„ÄÇ</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> cx=n/<span class="number">2</span>,cy=n/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(i-cx)+<span class="built_in">abs</span>(j-cy)&lt;=n/<span class="number">2</span>)</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;*&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> cout&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Êï∞ÁªÑ"><a href="#Êï∞ÁªÑ" class="headerlink" title="Êï∞ÁªÑ"></a>Êï∞ÁªÑ</h1><blockquote><p>Êï∞ÁªÑÁöÑÂÆö‰πâÊñπÂºèÂíåÂèòÈáèÁ±ª‰ºº„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>],b[<span class="number">20</span>];</span><br><span class="line">    <span class="type">float</span> f[<span class="number">33</span>];</span><br><span class="line">    <span class="type">double</span> d[<span class="number">123</span>];</span><br><span class="line">    <span class="type">char</span> c[<span class="number">21</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Êï∞ÁªÑÁöÑÂàùÂßãÂåñÔºåÂú®mainÂáΩÊï∞ÂÜÖÈÉ®ÔºåÊú™ÂàùÂßãÂåñÁöÑÊï∞ÁªÑ‰∏≠ÁöÑÂÖÉÁ¥†ÊòØÈöèÊú∫ÁöÑ„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>&#125;;  <span class="comment">//Âê´Êúâ3‰∏™ÂÖÉÁ¥†ÁöÑÊï∞ÁªÑÔºåÂÖÉÁ¥†ÂàÜÂà´ÊòØ0,1,2</span></span><br><span class="line">    <span class="type">int</span> b[]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;  <span class="comment">//Áª¥Â∫¶ÊòØ3ÁöÑÊï∞ÁªÑ</span></span><br><span class="line">    <span class="type">int</span> c[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>&#125;;  <span class="comment">//Á≠â‰ª∑‰∫é c[]=&#123;0,1,2,0,0&#125;</span></span><br><span class="line">    <span class="type">char</span> d[<span class="number">3</span>]=&#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;  <span class="comment">//Â≠óÁ¨¶Êï∞ÁªÑÁöÑÂàùÂßãÂåñ</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ËÆøÈóÆÊï∞ÁªÑÂÖÉÁ¥†ÔºåÈÄöËøá‰∏ãÊ†áËÆøÈóÆÊï∞ÁªÑ„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>&#125;;  <span class="comment">//Êï∞ÁªÑ‰∏ãÊ†á‰ªé0ÂºÄÂßã</span></span><br><span class="line">    cout&lt;&lt;a[<span class="number">0</span>]&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;a[<span class="number">1</span>]&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;a[<span class="number">2</span>]&lt;&lt;endl;</span><br><span class="line">    a[<span class="number">0</span>]=<span class="number">5</span>;</span><br><span class="line">    cout&lt;&lt;a[<span class="number">0</span>]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>‰ΩøÁî®Êï∞ÁªÑÂÆûÁé∞Ê±ÇÊñêÊ≥¢ÈÇ£Â•ëÊï∞ÂàóÁöÑÁ¨¨NÈ°π„ÄÇ</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> f[<span class="number">100</span>];</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">0</span>,f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++) f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>];</span><br><span class="line">    cout&lt;&lt;f[n]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ËæìÂÖ•‰∏Ä‰∏™nÔºåÂÜçËæìÂÖ•n‰∏™Êï¥Êï∞„ÄÇÂ∞ÜËøô‰∏™Êï∞ÁªÑÈ°∫Êó∂ÈíàÊóãËΩ¨k(k &lt;&#x3D; n)Ê¨°ÔºåÊúÄÂêéÂ∞ÜÁªìÊûúËæìÂá∫„ÄÇ</strong></p></font><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100</span>];</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin&gt;&gt;a[i];</span><br><span class="line">    <span class="built_in">reverse</span>(a,a+k);</span><br><span class="line">    <span class="built_in">reverse</span>(a+k,a+n);</span><br><span class="line">    <span class="built_in">reverse</span>(a,a+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ËÆ°ÁÆó2ÁöÑNÊ¨°Êñπ„ÄÇN &lt;&#x3D; 10000</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10000</span>],size=<span class="number">1</span>,n;</span><br><span class="line">    a[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;size;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            t+=a[i]*<span class="number">2</span>;</span><br><span class="line">            a[i]=t%<span class="number">10</span>;</span><br><span class="line">            t/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(t) a[size++]=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=size<span class="number">-1</span>;~i;i--) cout&lt;&lt;a[i];</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Â§öÁª¥Êï∞ÁªÑ:Â§öÁª¥Êï∞ÁªÑÂ∞±ÊòØÊï∞ÁªÑÁöÑÊï∞ÁªÑ„ÄÇ<br>Int a[3][4];   &#x2F;&#x2F; Â§ßÂ∞è‰∏∫3ÁöÑÊï∞ÁªÑÔºåÊØè‰∏™ÂÖÉÁ¥†ÊòØÂê´Êúâ4‰∏™Êï¥Êï∞ÁöÑÊï∞ÁªÑ„ÄÇ<br>Int arr[10][20][30] &#x3D; {0};  &#x2F;***  Â∞ÜÊâÄÊúâÂÖÉÁ¥†ÂàùÂßãÂåñ‰∏∫0<br>,Â§ßÂ∞è‰∏∫10ÁöÑÊï∞ÁªÑÔºåÂÆÉÁöÑÊØè‰∏™ÂÖÉÁ¥†ÊòØÂê´Êúâ4‰∏™Êï¥Êï∞ÁöÑÊï∞ÁªÑ, Ëøô‰∫õÊï∞ÁªÑÁöÑÂÖÉÁ¥†ÊòØÂê´Êúâ30‰∏™Êï¥Êï∞ÁöÑÊï∞ÁªÑ   ***&#x2F;</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> b[<span class="number">3</span>][<span class="number">4</span>]=&#123;   <span class="comment">//‰∏â‰∏™ÂÖÉÁ¥†ÔºåÊØè‰∏™ÂÖÉÁ¥†ÊòØÂ§ßÂ∞è‰∏∫4ÁöÑÊï∞ÁªÑ</span></span><br><span class="line">            &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,   <span class="comment">//Á¨¨‰∏ÄË°åÁöÑÂàùÂßãÂÄº</span></span><br><span class="line">            &#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;,   <span class="comment">//Á¨¨‰∫åË°åÁöÑÂàùÂßãÂÄº</span></span><br><span class="line">            &#123;<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>&#125;  <span class="comment">//Á¨¨‰∏âË°åÁöÑÂàùÂßãÂÄº</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ËæìÂÖ•‰∏Ä‰∏™nË°åmÂàóÁöÑÁü©ÈòµÔºå‰ªéÂ∑¶‰∏äËßíÂºÄÂßãÂ∞ÜÂÖ∂ÊåâÂõûÂ≠óÂΩ¢ÁöÑÈ°∫Â∫èÈ°∫Êó∂ÈíàÊâìÂç∞Âá∫Êù•„ÄÇ</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++) cin&gt;&gt;arr[i][j];</span><br><span class="line"></span><br><span class="line">   <span class="type">bool</span> st[<span class="number">50</span>][<span class="number">50</span>]=&#123;<span class="literal">false</span>&#125;;</span><br><span class="line">   <span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">   <span class="type">int</span> d=<span class="number">1</span>,x=<span class="number">0</span>,y=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n*m;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="type">int</span> a=x+dx[d],b=y+dy[d];</span><br><span class="line">       <span class="keyword">if</span>(a&lt;<span class="number">0</span> || a&gt;=n || b&lt;<span class="number">0</span> || b&gt;=m || st[a][b])</span><br><span class="line">       &#123;</span><br><span class="line">           d=(d+<span class="number">1</span>)%<span class="number">4</span>;</span><br><span class="line">           a=x+dx[d],b=y+dy[d];</span><br><span class="line">       &#125;</span><br><span class="line">       cout&lt;&lt;arr[x][y]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="comment">//   cout&lt;&lt;&quot;x = &quot;&lt;&lt;x&lt;&lt;&#x27; &#x27;&lt;&lt;&quot;y = &quot;&lt;&lt;y&lt;&lt;endl;</span></span><br><span class="line">       st[x][y]=<span class="literal">true</span>;</span><br><span class="line">       x=a,y=b;</span><br><span class="line">   &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Â≠óÁ¨¶‰∏≤"><a href="#Â≠óÁ¨¶‰∏≤" class="headerlink" title="Â≠óÁ¨¶‰∏≤"></a>Â≠óÁ¨¶‰∏≤</h1><h2 id="Â≠óÁ¨¶‰∏éÊï¥Êï∞ÁöÑËÅîÁ≥ª‚Äî‚ÄîASCIIÁ†Å"><a href="#Â≠óÁ¨¶‰∏éÊï¥Êï∞ÁöÑËÅîÁ≥ª‚Äî‚ÄîASCIIÁ†Å" class="headerlink" title="Â≠óÁ¨¶‰∏éÊï¥Êï∞ÁöÑËÅîÁ≥ª‚Äî‚ÄîASCIIÁ†Å"></a>Â≠óÁ¨¶‰∏éÊï¥Êï∞ÁöÑËÅîÁ≥ª‚Äî‚ÄîASCIIÁ†Å</h2><blockquote><p>ÊØè‰∏™Â∏∏Áî®Â≠óÁ¨¶ÈÉΩÂØπÂ∫î‰∏Ä‰∏™-128~127ÁöÑÊï∞Â≠óÔºå‰∫åËÄÖ‰πãÈó¥ÂèØ‰ª•Áõ∏‰∫íËΩ¨Âåñ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> c=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    cout&lt;&lt;(<span class="type">int</span>)c&lt;&lt;endl;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">66</span>;</span><br><span class="line">    cout&lt;&lt;(<span class="type">char</span>)a&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Â∏∏Áî®ASCIIÂÄºÔºö‚ÄôA‚Äô-‚ÄòZ‚Äô ÊòØ65~90Ôºå‚Äôa‚Äô-‚Äòz‚ÄôÊòØ97-122Ôºå‚Äô0‚Äô-‚Äò9‚ÄôÊòØ48-57„ÄÇÂ≠óÁ¨¶ÂèØ‰ª•ÂèÇ‰∏éËøêÁÆóÔºåËøêÁÆóÊó∂‰ºöÂ∞ÜÂÖ∂ÂΩìÂÅöÊï¥Êï∞</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="string">&#x27;B&#x27;</span>-<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="type">int</span> b=<span class="string">&#x27;A&#x27;</span>*<span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">    <span class="type">char</span> c=<span class="string">&#x27;A&#x27;</span>+<span class="number">2</span>;</span><br><span class="line">    cout&lt;&lt;a&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;b&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;c&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ËæìÂÖ•‰∏ÄË°åÂ≠óÁ¨¶ÔºåÁªüËÆ°Âá∫ÂÖ∂‰∏≠Êï∞Â≠óÂ≠óÁ¨¶ÁöÑ‰∏™Êï∞Ôºå‰ª•ÂèäÂ≠óÊØçÂ≠óÁ¨¶ÁöÑ‰∏™Êï∞„ÄÇ</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n=<span class="number">0</span>,c=<span class="number">0</span>;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;9&#x27;</span>) n++;</span><br><span class="line">        <span class="keyword">if</span>((s[i]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;z&#x27;</span>)||(s[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;Z&#x27;</span>)) c++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;n&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;c&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Â≠óÁ¨¶Êï∞ÁªÑ"><a href="#Â≠óÁ¨¶Êï∞ÁªÑ" class="headerlink" title="Â≠óÁ¨¶Êï∞ÁªÑ"></a>Â≠óÁ¨¶Êï∞ÁªÑ</h2><blockquote><p>Â≠óÁ¨¶‰∏≤Â∞±ÊòØÂ≠óÁ¨¶Êï∞ÁªÑÂä†‰∏äÁªìÊùüÁ¨¶‚Äô\0‚Äô„ÄÇÂèØ‰ª•‰ΩøÁî®Â≠óÁ¨¶‰∏≤Êù•ÂàùÂßãÂåñÂ≠óÁ¨¶Êï∞ÁªÑÔºå‰ΩÜÊ≠§Êó∂Ë¶ÅÊ≥®ÊÑèÔºåÊØè‰∏™Â≠óÁ¨¶‰∏≤ÁªìÂ∞æ‰ºöÊöóÂê´‰∏Ä‰∏™‚Äô\0‚ÄôÂ≠óÁ¨¶ÔºåÂõ†Ê≠§Â≠óÁ¨¶Êï∞ÁªÑÁöÑÈïøÂ∫¶Ëá≥Â∞ëË¶ÅÊØîÂ≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶Â§ö1ÔºÅ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> a1[]=&#123;<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;+&#x27;</span>&#125;;   <span class="comment">//ÂàóË°®ÂàùÂßãÂåñÔºåÊ≤°ÊúâÁ©∫Â≠óÁ¨¶</span></span><br><span class="line">    <span class="type">char</span> a2[]=&#123;<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;;  <span class="comment">//ÂàóË°®ÂàùÂßãÂåñÔºåÂê´ÊúâÊòæÁ§∫ÁöÑÁ©∫Â≠óÁ¨¶ </span></span><br><span class="line">    <span class="type">char</span> a3[]=<span class="string">&quot;C++&quot;</span>;  <span class="comment">//Ëá™Âä®Ê∑ªÂä†Ë°®Á§∫Â≠óÁ¨¶‰∏≤ÁªìÂ∞æÁöÑÁ©∫Â≠óÁ¨¶</span></span><br><span class="line">    <span class="type">char</span> a4[<span class="number">6</span>]=<span class="string">&quot;Daniel&quot;</span>;  <span class="comment">//ÈîôËØØ:Ê≤°ÊúâÁ©∫Èó¥ÂèØÂ≠òÊîæÁ©∫Â≠óÁ¨¶!</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>Â≠óÁ¨¶Êï∞ÁªÑÁöÑËæìÂÖ•ËæìÂá∫</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">100</span>];</span><br><span class="line">    cin&gt;&gt;str;   <span class="comment">//ËæìÂÖ•Â≠óÁ¨¶‰∏≤Êó∂ÔºåÈÅáÂà∞Á©∫Ê†ºÊàñËÄÖÂõûËΩ¶Â∞±‰ºöÂÅúÊ≠¢!</span></span><br><span class="line">    cout&lt;&lt;str&lt;&lt;endl;  <span class="comment">//ËæìÂá∫Â≠óÁ¨¶‰∏≤Êó∂ÔºåÈÅáÂà∞Á©∫Ê†ºÊàñËÄÖÂõûËΩ¶‰∏ç‰ºöÂÅúÊ≠¢</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,str);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ËØªÂÖ•‰∏ÄË°åÂ≠óÁ¨¶‰∏≤ÔºåÂåÖÊã¨Á©∫Ê†º</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">gets</span>(str);</span><br><span class="line">    cout&lt;&lt;str&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Â≠óÁ¨¶Êï∞ÁªÑÁöÑÂ∏∏Áî®Êìç‰Ωú"><a href="#Â≠óÁ¨¶Êï∞ÁªÑÁöÑÂ∏∏Áî®Êìç‰Ωú" class="headerlink" title="Â≠óÁ¨¶Êï∞ÁªÑÁöÑÂ∏∏Áî®Êìç‰Ωú"></a>Â≠óÁ¨¶Êï∞ÁªÑÁöÑÂ∏∏Áî®Êìç‰Ωú</h2><blockquote><p>‰∏ãÈù¢Âá†‰∏™ÂáΩÊï∞ÈúÄË¶ÅÂºïÂÖ•Â§¥Êñá‰ª∂: #include &lt;string.h&gt;<br>(1)strlen(str):Ê±ÇÂ≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶<br>(2)strcmp(a, b):ÊØîËæÉ‰∏§‰∏™Â≠óÁ¨¶‰∏≤ÁöÑÂ§ßÂ∞èÔºåa &lt; b ËøîÂõû-1Ôºåa &#x3D;&#x3D; b ËøîÂõû0Ôºåa &gt; bËøîÂõû1„ÄÇËøôÈáåÁöÑÊØîËæÉÊñπÂºèÊòØÂ≠óÂÖ∏Â∫èÔºÅ<br>(3)strcpy(a, b):Â∞ÜÂ≠óÁ¨¶‰∏≤bÂ§çÂà∂Áªô‰ªéaÂºÄÂßãÁöÑÂ≠óÁ¨¶Êï∞ÁªÑ„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">100</span>]=<span class="string">&quot;hello world!&quot;</span>,b[<span class="number">100</span>];</span><br><span class="line">    cout&lt;&lt;<span class="built_in">strlen</span>(a)&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">strcpy</span>(b,a);</span><br><span class="line">    cout&lt;&lt;<span class="built_in">strcmp</span>(a,b)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ÈÅçÂéÜÂ≠óÁ¨¶Êï∞ÁªÑ‰∏≠ÁöÑÂ≠óÁ¨¶</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">100</span>]=<span class="string">&quot;hello world!&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(a);i++) cout&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Ê†áÂáÜÂ∫ìÁ±ªÂûã-string"><a href="#Ê†áÂáÜÂ∫ìÁ±ªÂûã-string" class="headerlink" title="Ê†áÂáÜÂ∫ìÁ±ªÂûã string"></a>Ê†áÂáÜÂ∫ìÁ±ªÂûã string</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ÂèØÂèòÈïøÁöÑÂ≠óÁ¨¶Â∫èÂàóÔºåÊØîÂ≠óÁ¨¶Êï∞ÁªÑÊõ¥Âä†Â•ΩÁî®„ÄÇÈúÄË¶ÅÂºïÂ§¥Êñá</span><br><span class="line">‰ª∂Ôºö#include &lt;string&gt;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ÂÆö‰πâÂíåÂàùÂßãÂåñ</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1;   <span class="comment">//ÈªòËÆ§ÂàùÂßãÂåñÔºås1ÊòØ‰∏Ä‰∏™Á©∫Â≠óÁ¨¶‰∏≤</span></span><br><span class="line">    string s2=s1;  <span class="comment">//s2ÊòØs1ÁöÑÂâØÊú¨</span></span><br><span class="line">    string s3=<span class="string">&quot;hiya&quot;</span>;  <span class="comment">//s3ÊòØËØ•Â≠óÁ¨¶‰∏≤Â≠óÈù¢ÂÄºÁöÑÂâØÊú¨</span></span><br><span class="line">    <span class="function">string <span class="title">s4</span><span class="params">(<span class="number">10</span>,<span class="string">&#x27;c&#x27;</span>)</span></span>;  <span class="comment">//s4ÁöÑÂÜÖÂÆπÊòØ cccccccccc</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>stringÁöÑËØªÂÜô</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1,s2;</span><br><span class="line">    cin&gt;&gt;s1&gt;&gt;s2;</span><br><span class="line">    cout&lt;&lt;s1&lt;&lt;s2&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="red"><strong>‰∏çËÉΩÁî®printfÁõ¥Êé•ËæìÂá∫stringÔºåÈúÄË¶ÅÂÜôÊàêÔºöprintf(‚Äú%s‚Äù, s.c_str())</strong></font><br><font color="Bluee"><strong>‰ΩøÁî®getlineËØªÂèñ‰∏ÄÊï¥Ë°å</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="built_in">getline</span>(cin,s);</span><br><span class="line">    cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>stringÁöÑemptyÂíåsizeÊìç‰ΩúÔºàÊ≥®ÊÑèsizeÊòØÊó†Á¨¶Âè∑Êï¥Êï∞ÔºåÂõ†Ê≠§ s.size() &lt;&#x3D; -1‰∏ÄÂÆöÊàêÁ´ãÔºâ</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1,s2=<span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    cout&lt;&lt;s1.<span class="built_in">empty</span>()&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;s2.<span class="built_in">empty</span>()&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;s2.<span class="built_in">size</span>()&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>string ÁöÑÊØîËæÉÔºöÊîØÊåÅ &gt; &lt; &gt;&#x3D; &lt;&#x3D; &#x3D;&#x3D; !&#x3D;Á≠âÊâÄÊúâÊØîËæÉÊìç‰ΩúÔºåÊåâÂ≠óÂÖ∏Â∫èËøõË°åÊØîËæÉ„ÄÇ<br>‰∏∫stringÂØπË±°ËµãÂÄºÔºö<br>string s1(10, ‚Äòc‚Äô), s2;&#x2F;&#x2F; s1ÁöÑÂÜÖÂÆπÊòØ cccccccccc;<br>                                   &#x2F;&#x2F;s2ÊòØ‰∏Ä‰∏™Á©∫Â≠óÁ¨¶‰∏≤<br>s1 &#x3D; s2;&#x2F;&#x2F; ËµãÂÄºÔºöÁî®s2ÁöÑÂâØÊú¨ÊõøÊç¢s1ÁöÑÂâØÊú¨<br>                            &#x2F;&#x2F; Ê≠§Êó∂s1Âíås2ÈÉΩÊòØÁ©∫Â≠óÁ¨¶‰∏≤<br>‰∏§‰∏™stringÂØπË±°Áõ∏Âä†Ôºö<br>string s1 &#x3D; ‚Äúhello,  ‚Äù, s2 &#x3D; ‚Äúworld\n‚Äù;<br>string s3 &#x3D; s1 + s2;&#x2F;&#x2F; s3ÁöÑÂÜÖÂÆπÊòØ hello, world\n<br>s1 +&#x3D; s2;        &#x2F;&#x2F; s1 &#x3D; s1 + s2<br>Â≠óÈù¢ÂÄºÂíåstringÂØπË±°Áõ∏Âä†ÔºöÂÅöÂä†Ê≥ïËøêÁÆóÊó∂ÔºåÂ≠óÈù¢ÂÄºÂíåÂ≠óÁ¨¶ÈÉΩ‰ºöË¢´ËΩ¨ÂåñÊàêstringÂØπË±°ÔºåÂõ†Ê≠§Áõ¥Êé•Áõ∏Âä†Â∞±ÊòØÂ∞ÜËøô‰∫õÂ≠óÈù¢ÂÄº‰∏≤ËÅîËµ∑Êù•Ôºö<br>string s1 &#x3D; ‚Äúhello‚Äù, s2 &#x3D; ‚Äúworld‚Äù;&#x2F;&#x2F; Âú®s1Âíås2‰∏≠ÈÉΩÊ≤°ÊúâÊ†áÁÇπÁ¨¶Âè∑<br>string s3 &#x3D; s1 + ‚Äú, ‚Äú + s2 + ‚Äò\n‚Äô;<br>ÂΩìÊäästringÂØπË±°ÂíåÂ≠óÁ¨¶Â≠óÈù¢ÂÄºÂèäÂ≠óÁ¨¶‰∏≤Â≠óÈù¢ÂÄºÊ∑∑Âú®‰∏ÄÊù°ËØ≠Âè•‰∏≠‰ΩøÁî®Êó∂ÔºåÂøÖÈ°ªÁ°Æ‰øùÊØè‰∏™Âä†Ê≥ïËøêÁÆóÁ¨¶ÁöÑ‰∏§‰æßÁöÑËøêÁÆóÂØπË±°Ëá≥Â∞ëÊúâ‰∏Ä‰∏™ÊòØstringÔºö<br>string s4 &#x3D; s1 + ‚Äú, ‚Äú;&#x2F;&#x2F; Ê≠£Á°ÆÔºöÊää‰∏Ä‰∏™stringÂØπË±°ÂíåÊúâ‰∏Ä‰∏™Â≠óÈù¢ÂÄºÁõ∏Âä†<br>string s5 &#x3D; ‚Äúhello‚Äù +‚Äù, ‚Äú; &#x2F;&#x2F; ÈîôËØØÔºö‰∏§‰∏™ËøêÁÆóÂØπË±°ÈÉΩ‰∏çÊòØstring<br>string s6 &#x3D; s1 + ‚Äú, ‚Äú + ‚Äúworld‚Äù;  &#x2F;&#x2F; Ê≠£Á°ÆÔºåÊØè‰∏™Âä†Ê≥ïËøêÁÆóÈÉΩÊúâ‰∏Ä‰∏™ËøêÁÆóÁ¨¶ÊòØstring<br>string s7 &#x3D; ‚Äúhello‚Äù + ‚Äú, ‚Äú + s2;  &#x2F;&#x2F; ÈîôËØØÔºö‰∏çËÉΩÊääÂ≠óÈù¢ÂÄºÁõ¥Êé•Áõ∏Âä†ÔºåËøêÁÆóÊòØ‰ªéÂ∑¶Âà∞Âè≥ËøõË°åÁöÑ„ÄÇ</p></blockquote><p><font color="Bluee"><strong>Â§ÑÁêÜstringÂØπË±°‰∏≠ÁöÑÂ≠óÁ¨¶,ÂèØ‰ª•Â∞ÜstringÂØπË±°ÂΩìÊàêÂ≠óÁ¨¶Êï∞ÁªÑÊù•Â§ÑÁêÜ</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s=<span class="string">&quot;hello word&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++) cout&lt;&lt;s[i]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>‰ΩøÁî®Âü∫‰∫éËåÉÂõ¥ÁöÑforËØ≠Âè•</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s=<span class="string">&quot;hello word&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">char</span> c : s) cout&lt;&lt;c&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">char</span> &amp;c : s) c=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ÂáΩÊï∞"><a href="#ÂáΩÊï∞" class="headerlink" title="ÂáΩÊï∞"></a>ÂáΩÊï∞</h1><h2 id="ÂáΩÊï∞Âü∫Á°Ä"><a href="#ÂáΩÊï∞Âü∫Á°Ä" class="headerlink" title="ÂáΩÊï∞Âü∫Á°Ä"></a>ÂáΩÊï∞Âü∫Á°Ä</h2><blockquote><p>‰∏Ä‰∏™ÂÖ∏ÂûãÁöÑÂáΩÊï∞ÂÆö‰πâÂåÖÊã¨‰ª•‰∏ãÈÉ®ÂàÜÔºöËøîÂõûÁ±ªÂûã„ÄÅÂáΩÊï∞ÂêçÂ≠ó„ÄÅÁî±0‰∏™ÊàñÂ§ö‰∏™ÂΩ¢ÂèÇÁªÑÊàêÁöÑÂàóË°®‰ª•ÂèäÂáΩÊï∞‰Ωì„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">fact</span><span class="params">(<span class="type">int</span> val)</span>  <span class="comment">//Ê±ÇÈò∂‰πòÁöÑÁ®ãÂ∫è</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (val &gt; <span class="number">1</span>)</span><br><span class="line">        ret *= val -- ;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ÂáΩÊï∞ÂêçÂ≠óÊòØfactÔºåÂÆÉ‰ΩúÁî®‰∫é‰∏Ä‰∏™Êï¥ÂûãÂèÇÊï∞ÔºåËøîÂõû‰∏Ä‰∏™Êï¥ÂûãÂÄº„ÄÇreturnËØ≠Âè•Ë¥üË¥£ÁªìÊùüfactÂπ∂ËøîÂõûretÁöÑÂÄº„ÄÇ</strong></font><br><font color="red"><strong>Ë∞ÉÁî®ÂáΩÊï∞</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> j = <span class="built_in">fact</span>(<span class="number">5</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;5! is &quot;</span> &lt;&lt; j &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="Bluee"><strong>ÂáΩÊï∞ÁöÑË∞ÉÁî®ÂÆåÊàê‰∏§È°πÂ∑•‰ΩúÔºö‰∏ÄÊòØÁî®ÂÆûÂèÇÂàùÂßãÂåñÂáΩÊï∞ÂØπÂ∫îÁöÑÂΩ¢ÂèÇÔºå‰∫åÊòØÂ∞ÜÊéßÂà∂ÊùÉËΩ¨ÁßªÁªôË¢´Ë∞ÉÁî®ÂáΩÊï∞„ÄÇÊ≠§Êó∂Ôºå‰∏ªË∞ÉÂáΩÊï∞ÁöÑÊâßË°åË¢´ÊöÇÊó∂‰∏≠Êñ≠ÔºåË¢´Ë∞ÉÂáΩÊï∞ÂºÄÂßãÊâßË°å„ÄÇ</strong></font><br><font color="red"><strong>ÂΩ¢ÂèÇÂíåÂÆûÂèÇ</strong></font></p><blockquote><p>ÂÆûÂèÇÊòØÂΩ¢ÂèÇÁöÑÂàùÂßãÂÄº„ÄÇÁ¨¨‰∏Ä‰∏™ÂÆûÂèÇÂàùÂßãÂåñÁ¨¨‰∏Ä‰∏™ÂΩ¢ÂèÇÔºåÁ¨¨‰∫å‰∏™ÂÆûÂèÇÂàùÂßãÂåñÁ¨¨‰∫å‰∏™ÂΩ¢ÂèÇÔºå‰æùÊ¨°Á±ªÊé®„ÄÇÂΩ¢ÂèÇÂíåÂÆûÂèÇÁöÑÁ±ªÂûãÂíå‰∏™Êï∞ÂøÖÈ°ªÂåπÈÖç„ÄÇ<br>fact(‚Äúhello‚Äù);  &#x2F;&#x2F; ÈîôËØØÔºöÂÆûÂèÇÁ±ªÂûã‰∏çÊ≠£Á°Æ<br>fact(); &#x2F;&#x2F; ÈîôËØØÔºöÂÆûÂèÇÊï∞Èáè‰∏çË∂≥<br>fact(42, 10, 0); &#x2F;&#x2F; ÈîôËØØÔºöÂÆûÂèÇÊï∞ÈáèËøáÂ§ö<br>fact(3.14); &#x2F;&#x2F; Ê≠£Á°ÆÔºöËØ•ÂÆûÂèÇËÉΩËΩ¨Êç¢ÊàêintÁ±ªÂûãÔºåÁ≠â‰ª∑‰∫éfact(3);<br>ÂΩ¢ÂèÇ‰πüÂèØ‰ª•ËÆæÁΩÆÈªòËÆ§ÂÄºÔºå‰ΩÜÊâÄÊúâÈªòËÆ§ÂÄºÂøÖÈ°ªÊòØÊúÄÂêéÂá†‰∏™„ÄÇÂΩì‰º†ÂÖ•ÁöÑÂÆûÂèÇ‰∏™Êï∞Â∞ë‰∫éÂΩ¢ÂèÇ‰∏™Êï∞Êó∂ÔºåÊúÄÂêéÊ≤°ÊúâË¢´‰º†ÂÖ•ÂÄºÁöÑÂΩ¢ÂèÇ‰ºö‰ΩøÁî®ÈªòËÆ§ÂÄº„ÄÇ</p></blockquote><p><font color="red"><strong>ÂáΩÊï∞ÁöÑÂΩ¢ÂèÇÂàóË°®</strong></font></p><blockquote><p>ÂáΩÊï∞ÁöÑÂΩ¢ÂèÇÂàóË°®ÂèØ‰ª•‰∏∫Á©∫Ôºå‰ΩÜÊòØ‰∏çËÉΩÁúÅÁï•„ÄÇ<br>void f1() {&#x2F;* ‚Ä¶. <em>&#x2F;}&#x2F;&#x2F; ÈöêÂºèÂú∞ÂÆö‰πâÁ©∫ÂΩ¢ÂèÇÂàóË°®<br>void f2(void) {&#x2F;</em> ‚Ä¶ <em>&#x2F;} &#x2F;&#x2F; ÊòæÂºèÂú∞ÂÆö‰πâÁ©∫ÂΩ¢ÂèÇÂàóË°®<br>ÂΩ¢ÂèÇÂàóË°®‰∏≠ÁöÑÂΩ¢ÂèÇÈÄöÂ∏∏Áî®ÈÄóÂè∑ÈöîÂºÄÔºåÂÖ∂‰∏≠ÊØè‰∏™ÂΩ¢ÂèÇÈÉΩÊòØÂê´Êúâ‰∏Ä‰∏™Â£∞ÊòéÁ¨¶ÁöÑÂ£∞Êòé„ÄÇÂç≥‰Ωø‰∏§‰∏™ÂΩ¢ÂèÇÁöÑÁ±ªÂûã‰∏ÄÊ†∑Ôºå‰πüÂøÖÈ°ªÊää‰∏§‰∏™Á±ªÂûãÈÉΩÂÜôÂá∫Êù•Ôºö<br>int f3(int v1, v2) {&#x2F;</em> ‚Ä¶ <em>&#x2F;} &#x2F;&#x2F; ÈîôËØØ<br>int f4(int v1, int v2) {&#x2F;</em> ‚Ä¶ *&#x2F;} &#x2F;&#x2F; Ê≠£Á°Æ</p></blockquote><p><font color="red"><strong>ÂáΩÊï∞ËøîÂõûÁ±ªÂûã</strong></font></p><blockquote><p>Â§ßÂ§öÊï∞Á±ªÂûãÈÉΩËÉΩÁî®‰ΩúÂáΩÊï∞ÁöÑËøîÂõûÁ±ªÂûã„ÄÇ‰∏ÄÁßçÁâπÊÆäÁöÑËøîÂõûÁ±ªÂûãÊòØvoidÔºåÂÆÉË°®Á§∫ÂáΩÊï∞‰∏çËøîÂõû‰ªª‰ΩïÂÄº„ÄÇÂáΩÊï∞ÁöÑËøîÂõûÁ±ªÂûã‰∏çËÉΩÊòØÊï∞ÁªÑÁ±ªÂûãÊàñÂáΩÊï∞Á±ªÂûãÔºå‰ΩÜÂèØ‰ª•ÊòØÊåáÂêëÊï∞ÁªÑÊàñËÄÖÂáΩÊï∞ÁöÑÊåáÈíà„ÄÇ</p></blockquote><p><font color="red"><strong>Â±ÄÈÉ®ÂèòÈáè„ÄÅÂÖ®Â±ÄÂèòÈáè‰∏éÈùôÊÄÅÂèòÈáè</strong></font></p><blockquote><p>Â±ÄÈÉ®ÂèòÈáèÂè™ÂèØ‰ª•Âú®ÂáΩÊï∞ÂÜÖÈÉ®‰ΩøÁî®ÔºåÂÖ®Â±ÄÂèòÈáèÂèØ‰ª•Âú®ÊâÄÊúâÂáΩÊï∞ÂÜÖ‰ΩøÁî®„ÄÇÂΩìÂ±ÄÈÉ®ÂèòÈáè‰∏éÂÖ®Â±ÄÂèòÈáèÈáçÂêçÊó∂Ôºå‰ºö‰ºòÂÖà‰ΩøÁî®Â±ÄÈÉ®ÂèòÈáè„ÄÇ</p></blockquote><h2 id="ÂèÇÊï∞‰º†ÈÄí"><a href="#ÂèÇÊï∞‰º†ÈÄí" class="headerlink" title="ÂèÇÊï∞‰º†ÈÄí"></a>ÂèÇÊï∞‰º†ÈÄí</h2><blockquote><p>‰º†ÂÄºÂèÇÊï∞:ÂΩìÂàùÂßãÂåñ‰∏Ä‰∏™ÈùûÂºïÁî®Á±ªÂûãÁöÑÂèòÈáèÊó∂ÔºåÂàùÂßãÂÄºË¢´Êã∑Ë¥ùÁªôÂèòÈáè„ÄÇÊ≠§Êó∂ÔºåÂØπÂèòÈáèÁöÑÊîπÂä®‰∏ç‰ºöÂΩ±ÂìçÂàùÂßãÂÄº„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x=<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">10</span>;</span><br><span class="line">    <span class="built_in">f</span>(x);</span><br><span class="line">    cout&lt;&lt;x&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>‰º†ÂºïÁî®ÂèÇÊï∞:ÂΩìÂáΩÊï∞ÁöÑÂΩ¢ÂèÇ‰∏∫ÂºïÁî®Á±ªÂûãÊó∂ÔºåÂØπÂΩ¢ÂèÇÁöÑ‰øÆÊîπ‰ºöÂΩ±ÂìçÂÆûÂèÇÁöÑÂÄº„ÄÇ‰ΩøÁî®ÂºïÁî®ÁöÑ‰ΩúÁî®ÔºöÈÅøÂÖçÊã∑Ë¥ù„ÄÅËÆ©ÂáΩÊï∞ËøîÂõûÈ¢ùÂ§ñ‰ø°ÊÅØ„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x=<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">10</span>;</span><br><span class="line">    <span class="built_in">f</span>(x);</span><br><span class="line">    cout&lt;&lt;x&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Êï∞ÁªÑÂΩ¢ÂèÇ:Âú®ÂáΩÊï∞‰∏≠ÂØπÊï∞ÁªÑ‰∏≠ÁöÑÂÄºÁöÑ‰øÆÊîπÔºå‰ºöÂΩ±ÂìçÂáΩÊï∞Â§ñÈù¢ÁöÑÊï∞ÁªÑ„ÄÇ<br>‰∏ÄÁª¥Êï∞ÁªÑÂΩ¢ÂèÇÁöÑÂÜôÊ≥ïÔºö<br>        &#x2F;&#x2F; Â∞ΩÁÆ°ÂΩ¢Âºè‰∏çÂêåÔºå‰ΩÜËøô‰∏â‰∏™printÂáΩÊï∞ÊòØÁ≠â‰ª∑ÁöÑ<br>        void print(int <em>a) {&#x2F;</em> ‚Ä¶ <em>&#x2F;}<br>        void print(int a[]) {&#x2F;</em> ‚Ä¶ <em>&#x2F;}<br>        void print(int a[10]) {&#x2F;</em> ‚Ä¶ *&#x2F;}</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">print</span><span class="params">(<span class="type">int</span> a[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) cout&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) a[i]=i;</span><br><span class="line">    <span class="built_in">print</span>(a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Â§öÁª¥Êï∞ÁªÑÂΩ¢ÂèÇÁöÑÂÜôÊ≥ïÔºöÂ§öÁª¥Êï∞ÁªÑ‰∏≠ÔºåÈô§‰∫ÜÁ¨¨‰∏ÄÁª¥‰πãÂ§ñÔºåÂÖ∂‰ΩôÁª¥Â∫¶ÁöÑÂ§ßÂ∞èÂøÖÈ°ªÊåáÂÆö<br>void print(int (<em>a)[10]) {&#x2F;</em> ‚Ä¶ <em>&#x2F;}<br>void print(int a[][10]) {&#x2F;</em> ‚Ä¶ *&#x2F;}</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">print</span><span class="params">(<span class="type">int</span> a[][<span class="number">10</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)</span><br><span class="line">            cout&lt;&lt;a[i][j]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)</span><br><span class="line">             a[i][j]=j;</span><br><span class="line">    <span class="built_in">print</span>(a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ËøîÂõûÁ±ªÂûãÂíåreturnËØ≠Âè•:return ËØ≠Âè•ÁªàÊ≠¢ÂΩìÂâçÊ≠£Âú®ÊâßË°åÁöÑÂáΩÊï∞Âπ∂Â∞ÜÊéßÂà∂ÊùÉËøîÂõûÂà∞Ë∞ÉÁî®ËØ•ÂáΩÊï∞ÁöÑÂú∞Êñπ„ÄÇreturnËØ≠Âè•Êúâ‰∏§ÁßçÂΩ¢ÂºèÔºö<br>return;<br>return expression;</p></blockquote><blockquote><p>Êó†ËøîÂõûÂÄºÂáΩÊï∞:Ê≤°ÊúâËøîÂõûÂÄºÁöÑreturnËØ≠Âè•Âè™ËÉΩÁî®Âú®ËøîÂõûÁ±ªÂûãÊòØvoidÁöÑÂáΩÊï∞‰∏≠„ÄÇËøîÂõûvoidÁöÑÂáΩÊï∞‰∏çË¶ÅÊ±ÇÈùûÂæóÊúâreturnËØ≠Âè•ÔºåÂõ†‰∏∫Âú®ËøôÁ±ªÂáΩÊï∞ÁöÑÊúÄÂêé‰∏ÄÂè•ÂêéÈù¢‰ºöÈöêÂºèÂú∞ÊâßË°åreturn„ÄÇÈÄöÂ∏∏ÊÉÖÂÜµ‰∏ãÔºåvoidÂáΩÊï∞Â¶ÇÊûúÊÉ≥Âú®ÂÆÉÁöÑ‰∏≠Èó¥‰ΩçÁΩÆÊèêÂâçÈÄÄÂá∫ÔºåÂèØ‰ª•‰ΩøÁî®returnËØ≠Âè•„ÄÇreturnÁöÑËøôÁßçÁî®Ê≥ïÊúâÁÇπÁ±ª‰ºº‰∫éÊàë‰ª¨Áî®breakËØ≠Âè•ÈÄÄÂá∫Âæ™ÁéØ„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> &amp;v1,<span class="type">int</span> &amp;v2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Â¶ÇÊûú‰∏§‰∏™ÂÄºÁõ∏Á≠âÔºåÂàô‰∏çÈúÄË¶Å‰∫§Êç¢ÔºåÁõ¥Êé•ÈÄÄÂá∫</span></span><br><span class="line">    <span class="keyword">if</span> (v1 == v2)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// Â¶ÇÊûúÁ®ãÂ∫èÊâßË°åÂà∞‰∫ÜËøôÈáåÔºåËØ¥ÊòéËøòÈúÄË¶ÅÁªßÁª≠ÂÆåÊàêÊüê‰∫õÂäüËÉΩ</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> tmp = v2;</span><br><span class="line">    v2 = v1;</span><br><span class="line">    v1 = tmp;</span><br><span class="line">    <span class="comment">// Ê≠§Â§ÑÊó†È°ªÊòæÁ§∫ÁöÑreturnËØ≠Âè•</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ÊúâËøîÂõûÂÄºÁöÑÂáΩÊï∞:Âè™Ë¶ÅÂáΩÊï∞ÁöÑËøîÂõûÁ±ªÂûã‰∏çÊòØvoidÔºåÂàôËØ•ÂáΩÊï∞ÂÜÖÁöÑÊØèÊù°returnËØ≠Âè•ÂøÖÈ°ªËøîÂõû‰∏Ä‰∏™ÂÄº„ÄÇreturnËØ≠Âè•ËøîÂõûÂÄºÁöÑÁ±ªÂûãÂøÖÈ°ª‰∏éÂáΩÊï∞ÁöÑËøîÂõûÁ±ªÂûãÁõ∏ÂêåÔºåÊàñËÄÖËÉΩÈöêÂºèÂú∞ËΩ¨Êç¢ÂáΩÊï∞ÁöÑËøîÂõûÁ±ªÂûã„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;y) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">max</span>(x,y)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ÂáΩÊï∞ÈÄíÂΩí:Âú®‰∏Ä‰∏™ÂáΩÊï∞ÂÜÖÈÉ®Ôºå‰πüÂèØ‰ª•Ë∞ÉÁî®ÂáΩÊï∞Êú¨Ë∫´„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fact</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> n*<span class="built_in">fact</span>(n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">fact</span>(n)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Á±ª„ÄÅÁªìÊûÑ‰Ωì„ÄÅÊåáÈíà„ÄÅÂºïÁî®"><a href="#Á±ª„ÄÅÁªìÊûÑ‰Ωì„ÄÅÊåáÈíà„ÄÅÂºïÁî®" class="headerlink" title="Á±ª„ÄÅÁªìÊûÑ‰Ωì„ÄÅÊåáÈíà„ÄÅÂºïÁî®"></a>Á±ª„ÄÅÁªìÊûÑ‰Ωì„ÄÅÊåáÈíà„ÄÅÂºïÁî®</h1><h2 id="Á±ª‰∏éÁªìÊûÑ‰Ωì"><a href="#Á±ª‰∏éÁªìÊûÑ‰Ωì" class="headerlink" title="Á±ª‰∏éÁªìÊûÑ‰Ωì"></a>Á±ª‰∏éÁªìÊûÑ‰Ωì</h2><blockquote><p>Á±ªÁöÑÂÆö‰πâÔºöÁ±ª‰∏≠ÁöÑÂèòÈáèÂíåÂáΩÊï∞Ë¢´Áªü‰∏ÄÁß∞‰∏∫Á±ªÁöÑÊàêÂëòÂèòÈáè„ÄÇ<br>privateÂêéÈù¢ÁöÑÂÜÖÂÆπÊòØÁßÅÊúâÊàêÂëòÂèòÈáèÔºåÂú®Á±ªÁöÑÂ§ñÈÉ®‰∏çËÉΩËÆøÈóÆÔºõpublicÂêéÈù¢ÁöÑÂÜÖÂÆπÊòØÂÖ¨ÊúâÊàêÂëòÂèòÈáèÔºåÂú®Á±ªÁöÑÂ§ñÈÉ®ÂèØ‰ª•ËÆøÈóÆ„ÄÇ</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> age, height;</span><br><span class="line">    <span class="type">double</span> money;</span><br><span class="line">    string books[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    string name;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">say</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;I&#x27;m &quot;</span> &lt;&lt; name &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">set_age</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">get_age</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add_money</span><span class="params">(<span class="type">double</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        money += x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; person_a, person_b, persons[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Person c;</span><br><span class="line">    c.name = <span class="string">&quot;Edviv&quot;</span>;      <span class="comment">// Ê≠£Á°ÆÔºÅËÆøÈóÆÂÖ¨ÊúâÂèòÈáè</span></span><br><span class="line">    c.age = <span class="number">18</span>;          <span class="comment">// ÈîôËØØÔºÅËÆøÈóÆÁßÅÊúâÂèòÈáè</span></span><br><span class="line">    c.<span class="built_in">set_age</span>(<span class="number">18</span>);       <span class="comment">// Ê≠£Á°ÆÔºÅset_age()ÊòØÂÖ±ÊúâÊàêÂëòÂèòÈáè</span></span><br><span class="line">    c.<span class="built_in">add_money</span>(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    c.<span class="built_in">say</span>();</span><br><span class="line">    cout &lt;&lt; c.<span class="built_in">get_age</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="red"><strong>ÁªìÊûÑ‰ΩìÂíåÁ±ªÁöÑ‰ΩúÁî®ÊòØ‰∏ÄÊ†∑ÁöÑ„ÄÇ‰∏çÂêåÁÇπÂú®‰∫éÁ±ªÈªòËÆ§ÊòØprivateÔºåÁªìÊûÑ‰ΩìÈªòËÆ§ÊòØpublic„ÄÇ</strong></font></p><h2 id="ÊåáÈíàÂíåÂºïÁî®"><a href="#ÊåáÈíàÂíåÂºïÁî®" class="headerlink" title="ÊåáÈíàÂíåÂºïÁî®"></a>ÊåáÈíàÂíåÂºïÁî®</h2><p><font color="red"><strong>ÊåáÈíàÊåáÂêëÂ≠òÊîæÂèòÈáèÁöÑÂÄºÁöÑÂú∞ÂùÄ„ÄÇÂõ†Ê≠§Êàë‰ª¨ÂèØ‰ª•ÈÄöËøáÊåáÈíàÊù•‰øÆÊîπÂèòÈáèÁöÑÂÄº</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span>  <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> *p=&amp;a;</span><br><span class="line">    *p+=<span class="number">5</span>;</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Êï∞ÁªÑÂêçÊòØ‰∏ÄÁßçÁâπÊÆäÁöÑÊåáÈíà,ÊåáÈíàÂèØ‰ª•ÂÅöËøêÁÆó</p></blockquote><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span>  <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++) cout&lt;&lt;*(a+i)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="red"><strong>ÂºïÁî®ÂíåÊåáÈíàÁ±ª‰ººÔºåÁõ∏ÂΩì‰∫éÁªôÂèòÈáèËµ∑‰∫Ü‰∏™Âà´Âêç</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span>  <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> &amp;p=a;</span><br><span class="line">    p+=<span class="number">5</span>;</span><br><span class="line">    cout&lt;&lt;p&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="red"><strong>ÂçïÈìæË°®</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span>  <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    Node *next;</span><br><span class="line">&#125;*head;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Node *p=<span class="keyword">new</span> <span class="built_in">Node</span>();</span><br><span class="line">        p-&gt;val=i;</span><br><span class="line">        p-&gt;next=head;</span><br><span class="line">        head=p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(Node *p=head;p;p=p-&gt;next) cout&lt;&lt;p-&gt;val&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="STL"><a href="#STL" class="headerlink" title="STL"></a>STL</h1><h2 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h2><p><font color="red"><strong>vectorÊòØÂèòÈïøÊï∞ÁªÑÔºåÊîØÊåÅÈöèÊú∫ËÆøÈóÆÔºå‰∏çÊîØÊåÅÂú®‰ªªÊÑè‰ΩçÁΩÆ O(1) ÊèíÂÖ•„ÄÇ‰∏∫‰∫Ü‰øùËØÅÊïàÁéáÔºåÂÖÉÁ¥†ÁöÑÂ¢ûÂà†‰∏ÄËà¨Â∫îËØ•Âú®Êú´Â∞æËøõË°å„ÄÇ</strong></font></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Â£∞Êòé:</span><br><span class="line">    <span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span> Â§¥Êñá‰ª∂</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a;Áõ∏ÂΩì‰∫é‰∏Ä‰∏™ÈïøÂ∫¶Âä®ÊÄÅÂèòÂåñÁöÑ<span class="type">int</span>Êï∞ÁªÑ</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; b[<span class="number">233</span>];Áõ∏ÂΩì‰∫éÁ¨¨‰∏ÄÁª¥Èïø<span class="number">233</span>ÔºåÁ¨¨‰∫å‰ΩçÈïøÂ∫¶Âä®ÊÄÅÂèòÂåñÁöÑ<span class="type">int</span>Êï∞ÁªÑ</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">rec</span>&#123;‚Ä¶&#125;;</span><br><span class="line">    vector&lt;rec&gt; c;Ëá™ÂÆö‰πâÁöÑÁªìÊûÑ‰ΩìÁ±ªÂûã‰πüÂèØ‰ª•‰øùÂ≠òÂú®vector‰∏≠</span><br></pre></td></tr></table></figure><p><font color="red"><strong>size&#x2F;empty</strong></font></p><blockquote><p>sizeÂáΩÊï∞ËøîÂõûvectorÁöÑÂÆûÈôÖÈïøÂ∫¶ÔºàÂåÖÂê´ÁöÑÂÖÉÁ¥†‰∏™Êï∞ÔºâÔºåemptyÂáΩÊï∞ËøîÂõû‰∏Ä‰∏™boolÁ±ªÂûãÔºåË°®ÊòévectorÊòØÂê¶‰∏∫Á©∫„ÄÇ‰∫åËÄÖÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ÈÉΩÊòØ O(1)„ÄÇ<br>ÊâÄÊúâÁöÑSTLÂÆπÂô®ÈÉΩÊîØÊåÅËøô‰∏§‰∏™ÊñπÊ≥ïÔºåÂê´‰πâ‰πüÁõ∏ÂêåÔºå‰πãÂêéÊàë‰ª¨Â∞±‰∏çÂÜçÈáçÂ§çÁªôÂá∫„ÄÇ</p></blockquote><p><font color="red"><strong>clear</strong></font></p><blockquote><p>clearÂáΩÊï∞ÊäävectorÊ∏ÖÁ©∫„ÄÇ</p></blockquote><p><font color="red"><strong>Ëø≠‰ª£Âô®</strong></font></p><pre><code>Ëø≠‰ª£Âô®Â∞±ÂÉèSTLÂÆπÂô®ÁöÑ‚ÄúÊåáÈíà‚ÄùÔºåÂèØ‰ª•Áî®ÊòüÂè∑‚Äú*‚ÄùÊìç‰ΩúÁ¨¶Ëß£Èô§ÂºïÁî®„ÄÇ‰∏Ä‰∏™‰øùÂ≠òintÁöÑvectorÁöÑËø≠‰ª£Âô®Â£∞ÊòéÊñπÊ≥ï:vector&lt;int&gt;::iterator it;vectorÁöÑËø≠‰ª£Âô®ÊòØ‚ÄúÈöèÊú∫ËÆøÈóÆËø≠‰ª£Âô®‚ÄùÔºåÂèØ‰ª•ÊäävectorÁöÑËø≠‰ª£Âô®‰∏é‰∏Ä‰∏™Êï¥Êï∞Áõ∏Âä†ÂáèÔºåÂÖ∂Ë°å‰∏∫ÂíåÊåáÈíàÁöÑÁßªÂä®Á±ª‰ºº„ÄÇÂèØ‰ª•ÊäävectorÁöÑ‰∏§‰∏™Ëø≠‰ª£Âô®Áõ∏ÂáèÔºåÂÖ∂ÁªìÊûú‰πüÂíåÊåáÈíàÁõ∏ÂáèÁ±ª‰ººÔºåÂæóÂà∞‰∏§‰∏™Ëø≠‰ª£Âô®ÂØπÂ∫î‰∏ãÊ†á‰πãÈó¥ÁöÑË∑ùÁ¶ª„ÄÇ</code></pre><p><font color="red"><strong>begin&#x2F;end</strong></font></p><pre><code>beginÂáΩÊï∞ËøîÂõûÊåáÂêëvector‰∏≠Á¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑËø≠‰ª£Âô®„ÄÇ‰æãÂ¶ÇaÊòØ‰∏Ä‰∏™ÈùûÁ©∫ÁöÑvectorÔºåÂàô*a.begin()‰∏éa[0]ÁöÑ‰ΩúÁî®Áõ∏Âêå„ÄÇÊâÄÊúâÁöÑÂÆπÂô®ÈÉΩÂèØ‰ª•ËßÜ‰Ωú‰∏Ä‰∏™‚ÄúÂâçÈó≠ÂêéÂºÄ‚ÄùÁöÑÁªìÊûÑÔºåendÂáΩÊï∞ËøîÂõûvectorÁöÑÂ∞æÈÉ®ÔºåÂç≥Á¨¨n‰∏™ÂÖÉÁ¥†ÂÜçÂæÄÂêéÁöÑ‚ÄúËæπÁïå‚Äù„ÄÇ*a.end()‰∏éa[n]ÈÉΩÊòØË∂äÁïåËÆøÈóÆÔºåÂÖ∂‰∏≠n=a.size()„ÄÇ‰∏ãÈù¢‰∏§‰ªΩ‰ª£Á†ÅÈÉΩÈÅçÂéÜ‰∫Üvector&lt;int&gt;aÔºåÂπ∂ËæìÂá∫ÂÆÉÁöÑÊâÄÊúâÂÖÉÁ¥†„ÄÇfor (int I = 0; I &lt; a.size(); I ++) cout &lt;&lt; a[i] &lt;&lt; endl;    for (vector&lt;int&gt;::iterator it = a.begin(); it != a.end(); it ++)         cout &lt;&lt; *it &lt;&lt; endl;</code></pre><p><font color="red"><strong>front&#x2F;back</strong></font></p><pre><code>frontÂáΩÊï∞ËøîÂõûvectorÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÁ≠â‰ª∑‰∫é*a.begin() Âíå a[0]„ÄÇbackÂáΩÊï∞ËøîÂõûvectorÁöÑÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÁ≠â‰ª∑‰∫é*==a.end() Âíå a[a.size() ‚Äì 1]„ÄÇ</code></pre><p><font color="red"><strong>push_back() Âíå pop_back()</strong></font></p><pre><code>a.push_back(x) ÊääÂÖÉÁ¥†xÊèíÂÖ•Âà∞vector aÁöÑÂ∞æÈÉ®„ÄÇb.pop_back() Âà†Èô§vector aÁöÑÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†„ÄÇ</code></pre><h2 id="queue"><a href="#queue" class="headerlink" title="queue"></a>queue</h2><pre><code>#include &lt;queue&gt;Â§¥Êñá‰ª∂queue‰∏ªË¶ÅÂåÖÊã¨Âæ™ÁéØÈòüÂàóqueueÂíå‰ºòÂÖàÈòüÂàópriority_queue‰∏§‰∏™ÂÆπÂô®„ÄÇ</code></pre><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Â£∞Êòé:</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">rec</span>&#123;‚Ä¶&#125;; queue&lt;rec&gt; q; <span class="comment">//ÁªìÊûÑ‰Ωìrec‰∏≠ÂøÖÈ°ªÂÆö‰πâÂ∞è‰∫éÂè∑</span></span><br><span class="line">    priority_queue&lt;<span class="type">int</span>&gt; q;<span class="comment">// Â§ßÊ†πÂ†Ü</span></span><br><span class="line">    priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt; q;<span class="comment">// Â∞èÊ†πÂ†Ü</span></span><br><span class="line">    priority_queue&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt;q;</span><br></pre></td></tr></table></figure><p><font color="red"><strong>Âæ™ÁéØÈòüÂàó queue</strong></font></p><pre><code>push ‰ªéÈòüÂ∞æÊèíÂÖ•pop ‰ªéÈòüÂ§¥ÂºπÂá∫front ËøîÂõûÈòüÂ§¥ÂÖÉÁ¥†back ËøîÂõûÈòüÂ∞æÂÖÉÁ¥†</code></pre><p><font color="red"><strong>‰ºòÂÖàÈòüÂàó priority_queue</strong></font></p><pre><code>push ÊääÂÖÉÁ¥†ÊèíÂÖ•Â†Üpop Âà†Èô§Â†ÜÈ°∂ÂÖÉÁ¥†top Êü•ËØ¢Â†ÜÈ°∂ÂÖÉÁ¥†ÔºàÊúÄÂ§ßÂÄºÔºâ</code></pre><h2 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h2><pre><code>#include &lt;stack&gt;Â§¥Êñá‰ª∂stackÂåÖÂê´Ê†à„ÄÇÂ£∞ÊòéÂíåÂâçÈù¢ÁöÑÂÆπÂô®Á±ª‰ºº„ÄÇpush ÂêëÊ†àÈ°∂ÊèíÂÖ•pop ÂºπÂá∫Ê†àÈ°∂ÂÖÉÁ¥†</code></pre><h2 id="deque"><a href="#deque" class="headerlink" title="deque"></a>deque</h2><pre><code>#include &lt;deque&gt;ÂèåÁ´ØÈòüÂàódequeÊòØ‰∏Ä‰∏™ÊîØÊåÅÂú®‰∏§Á´ØÈ´òÊïàÊèíÂÖ•ÊàñÂà†Èô§ÂÖÉÁ¥†ÁöÑËøûÁª≠Á∫øÊÄßÂ≠òÂÇ®Á©∫Èó¥„ÄÇÂÆÉÂ∞±ÂÉèÊòØvectorÂíåqueueÁöÑÁªìÂêà„ÄÇ‰∏évectorÁõ∏ÊØîÔºådequeÂú®Â§¥ÈÉ®Â¢ûÂà†ÂÖÉÁ¥†‰ªÖÈúÄË¶ÅO(1)ÁöÑÊó∂Èó¥Ôºõ‰∏équeueÁõ∏ÊØîÔºådequeÂÉèÊï∞ÁªÑ‰∏ÄÊ†∑ÊîØÊåÅÈöèÊú∫ËÆøÈóÆ„ÄÇ[] ÈöèÊú∫ËÆøÈóÆbegin/endÔºåËøîÂõûdequeÁöÑÂ§¥/Â∞æËø≠‰ª£Âô®front/back ÈòüÂ§¥/ÈòüÂ∞æÂÖÉÁ¥†push_back ‰ªéÈòüÂ∞æÂÖ•Èòüpush_front ‰ªéÈòüÂ§¥ÂÖ•Èòüpop_back ‰ªéÈòüÂ∞æÂá∫Èòüpop_front ‰ªéÈòüÂ§¥Âá∫Èòüclear Ê∏ÖÁ©∫ÈòüÂàó</code></pre><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><pre><code>#include &lt;set&gt;Â§¥Êñá‰ª∂set‰∏ªË¶ÅÂåÖÊã¨setÂíåmultiset‰∏§‰∏™ÂÆπÂô®ÔºåÂàÜÂà´ÊòØ‚ÄúÊúâÂ∫èÈõÜÂêà‚ÄùÂíå‚ÄúÊúâÂ∫èÂ§öÈáçÈõÜÂêà‚ÄùÔºåÂç≥ÂâçËÄÖÁöÑÂÖÉÁ¥†‰∏çËÉΩÈáçÂ§çÔºåËÄåÂêéËÄÖÂèØ‰ª•ÂåÖÂê´Ëã•Âπ≤‰∏™Áõ∏Á≠âÁöÑÂÖÉÁ¥†„ÄÇsetÂíåmultisetÁöÑÂÜÖÈÉ®ÂÆûÁé∞ÊòØ‰∏ÄÊ£µÁ∫¢ÈªëÊ†ëÔºåÂÆÉ‰ª¨ÊîØÊåÅÁöÑÂáΩÊï∞Âü∫Êú¨Áõ∏Âêå„ÄÇ</code></pre><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Â£∞Êòé:</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">rec</span>&#123;‚Ä¶&#125;; set&lt;rec&gt; s;<span class="comment">// ÁªìÊûÑ‰Ωìrec‰∏≠ÂøÖÈ°ªÂÆö‰πâÂ∞è‰∫éÂè∑</span></span><br><span class="line">    multiset&lt;<span class="type">double</span>&gt; s;</span><br><span class="line"></span><br><span class="line">    size/empty/clear</span><br><span class="line">    ‰∏évectorÁ±ª‰ºº</span><br></pre></td></tr></table></figure><p><font color="red"><strong>Ëø≠‰ª£Âô®</strong></font></p><pre><code>setÂíåmultisetÁöÑËø≠‰ª£Âô®Áß∞‰∏∫‚ÄúÂèåÂêëËÆøÈóÆËø≠‰ª£Âô®‚ÄùÔºå‰∏çÊîØÊåÅ‚ÄúÈöèÊú∫ËÆøÈóÆ‚ÄùÔºåÊîØÊåÅÊòüÂè∑(*)Ëß£Èô§ÂºïÁî®Ôºå‰ªÖÊîØÊåÅ‚Äù++‚ÄùÂíå--‚Äú‰∏§‰∏™‰∏éÁÆóÊúØÁõ∏ÂÖ≥ÁöÑÊìç‰Ωú„ÄÇËÆæitÊòØ‰∏Ä‰∏™Ëø≠‰ª£Âô®Ôºå‰æãÂ¶Çset&lt;int&gt;::iterator it;Ëã•Êääit++ÔºåÂàôit‰ºöÊåáÂêë‚Äú‰∏ã‰∏Ä‰∏™‚ÄùÂÖÉÁ¥†„ÄÇËøôÈáåÁöÑ‚Äú‰∏ã‰∏Ä‰∏™‚ÄùÂÖÉÁ¥†ÊòØÊåáÂú®ÂÖÉÁ¥†‰ªéÂ∞èÂà∞Â§ßÊéíÂ∫èÁöÑÁªìÊûú‰∏≠ÔºåÊéíÂú®it‰∏ã‰∏ÄÂêçÁöÑÂÖÉÁ¥†„ÄÇÂêåÁêÜÔºåËã•Êääit--ÔºåÂàôitÂ∞Ü‰ºöÊåáÂêëÊéíÂú®‚Äú‰∏ä‰∏Ä‰∏™‚ÄùÁöÑÂÖÉÁ¥†„ÄÇ</code></pre><p><font color="red"><strong>begin&#x2F;end</strong></font></p><pre><code>ËøîÂõûÈõÜÂêàÁöÑÈ¶ñ„ÄÅÂ∞æËø≠‰ª£Âô®ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶Âùá‰∏∫O(1)„ÄÇs.begin() ÊòØÊåáÂêëÈõÜÂêà‰∏≠ÊúÄÂ∞èÂÖÉÁ¥†ÁöÑËø≠‰ª£Âô®„ÄÇs.end() ÊòØÊåáÂêëÈõÜÂêà‰∏≠ÊúÄÂ§ßÂÖÉÁ¥†ÁöÑ‰∏ã‰∏Ä‰∏™‰ΩçÁΩÆÁöÑËø≠‰ª£Âô®„ÄÇÊç¢Ë®Ä‰πãÔºåÂ∞±ÂÉèvector‰∏ÄÊ†∑ÔºåÊòØ‰∏Ä‰∏™‚ÄúÂâçÈó≠ÂêéÂºÄ‚ÄùÁöÑÂΩ¢Âºè„ÄÇÂõ†Ê≠§--s.end()ÊòØÊåáÂêëÈõÜÂêà‰∏≠ÊúÄÂ§ßÂÖÉÁ¥†ÁöÑËø≠‰ª£Âô®„ÄÇ</code></pre><p><font color="red"><strong>insert</strong></font></p><pre><code>s.insert(x)Êää‰∏Ä‰∏™ÂÖÉÁ¥†xÊèíÂÖ•Âà∞ÈõÜÂêàs‰∏≠ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(logn)„ÄÇÂú®set‰∏≠ÔºåËã•ÂÖÉÁ¥†Â∑≤Â≠òÂú®ÔºåÂàô‰∏ç‰ºöÈáçÂ§çÊèíÂÖ•ËØ•ÂÖÉÁ¥†ÔºåÂØπÈõÜÂêàÁöÑÁä∂ÊÄÅÊó†ÂΩ±Âìç„ÄÇ</code></pre><p><font color="red"><strong>find</strong></font></p><pre><code>s.find(x) Âú®ÈõÜÂêàs‰∏≠Êü•ÊâæÁ≠â‰∫éxÁöÑÂÖÉÁ¥†ÔºåÂπ∂ËøîÂõûÊåáÂêëËØ•ÂÖÉÁ¥†ÁöÑËø≠‰ª£Âô®„ÄÇËã•‰∏çÂ≠òÂú®ÔºåÂàôËøîÂõûs.end()„ÄÇÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(logn)„ÄÇ</code></pre><p><font color="red"><strong>lower_bound&#x2F;upper_bound</strong></font></p><pre><code>Ëøô‰∏§‰∏™ÂáΩÊï∞ÁöÑÁî®Ê≥ï‰∏éfindÁ±ª‰ººÔºå‰ΩÜÊü•ÊâæÁöÑÊù°‰ª∂Áï•Êúâ‰∏çÂêåÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(logn)„ÄÇs.lower_bound(x) Êü•ÊâæÂ§ß‰∫éÁ≠â‰∫éxÁöÑÂÖÉÁ¥†‰∏≠ÊúÄÂ∞èÁöÑ‰∏Ä‰∏™ÔºåÂπ∂ËøîÂõûÊåáÂêëËØ•ÂÖÉÁ¥†ÁöÑËø≠‰ª£Âô®„ÄÇs.upper_bound(x) Êü•ÊâæÂ§ß‰∫éxÁöÑÂÖÉÁ¥†‰∏≠ÊúÄÂ∞èÁöÑ‰∏Ä‰∏™ÔºåÂπ∂ËøîÂõûÊåáÂêëËØ•ÂÖÉÁ¥†ÁöÑËø≠‰ª£Âô®„ÄÇ</code></pre><p><font color="red"><strong>erase</strong></font></p><pre><code>ËÆæitÊòØ‰∏Ä‰∏™Ëø≠‰ª£Âô®Ôºås.erase(it) ‰ªés‰∏≠Âà†Èô§Ëø≠‰ª£Âô®itÊåáÂêëÁöÑÂÖÉÁ¥†ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫O(logn)ËÆæxÊòØ‰∏Ä‰∏™ÂÖÉÁ¥†Ôºås.erase(x) ‰ªés‰∏≠Âà†Èô§ÊâÄÊúâÁ≠â‰∫éxÁöÑÂÖÉÁ¥†ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫O(k+logn)ÔºåÂÖ∂‰∏≠kÊòØË¢´Âà†Èô§ÁöÑÂÖÉÁ¥†‰∏™Êï∞„ÄÇ</code></pre><p><font color="red"><strong>count</strong></font></p><pre><code>s.count(x) ËøîÂõûÈõÜÂêàs‰∏≠Á≠â‰∫éxÁöÑÂÖÉÁ¥†‰∏™Êï∞ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(k +logn)ÔºåÂÖ∂‰∏≠k‰∏∫ÂÖÉÁ¥†xÁöÑ‰∏™Êï∞„ÄÇ</code></pre><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><pre><code>#include &lt;map&gt;mapÂÆπÂô®ÊòØ‰∏Ä‰∏™ÈîÆÂÄºÂØπkey-valueÁöÑÊò†Â∞ÑÔºåÂÖ∂ÂÜÖÈÉ®ÂÆûÁé∞ÊòØ‰∏ÄÊ£µ‰ª•key‰∏∫ÂÖ≥ÈîÆÁ†ÅÁöÑÁ∫¢ÈªëÊ†ë„ÄÇMapÁöÑkeyÂíåvalueÂèØ‰ª•ÊòØ‰ªªÊÑèÁ±ªÂûãÔºåÂÖ∂‰∏≠keyÂøÖÈ°ªÂÆö‰πâÂ∞è‰∫éÂè∑ËøêÁÆóÁ¨¶„ÄÇ</code></pre><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Â£∞Êòé:</span><br><span class="line">    map&lt;key_type, value_type&gt; name;</span><br><span class="line">    ‰æãÂ¶ÇÔºö</span><br><span class="line">    map&lt;<span class="type">long</span>, <span class="type">long</span>, <span class="type">bool</span>&gt; vis;</span><br><span class="line">    map&lt;string, <span class="type">int</span>&gt; hash;</span><br><span class="line">    map&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;, vector&lt;<span class="type">int</span>&gt;&gt; test;</span><br><span class="line"></span><br><span class="line">size/empty/clear/begin/endÂùá‰∏ésetÁ±ª‰ºº„ÄÇ</span><br><span class="line"></span><br><span class="line">    Insert/erase</span><br><span class="line">    ‰∏ésetÁ±ª‰ººÔºå‰ΩÜÂÖ∂ÂèÇÊï∞ÂùáÊòØpair&lt;key_type, value_type&gt;„ÄÇ</span><br></pre></td></tr></table></figure><p><font color="red"><strong>find</strong></font></p><pre><code>h.find(x) Âú®ÂèòÈáèÂêç‰∏∫hÁöÑmap‰∏≠Êü•Êâækey‰∏∫xÁöÑ‰∫åÂÖÉÁªÑ„ÄÇ</code></pre><p><font color="red">[]Êìç‰ΩúÁ¨¶:</font></p><pre><code>h[key] ËøîÂõûkeyÊò†Â∞ÑÁöÑvalueÁöÑÂºïÁî®ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫O(logn)„ÄÇ[]Êìç‰ΩúÁ¨¶ÊòØmapÊúÄÂê∏Âºï‰∫∫ÁöÑÂú∞Êñπ„ÄÇÊàë‰ª¨ÂèØ‰ª•ÂæàÊñπ‰æøÂú∞ÈÄöËøáh[key]Êù•ÂæóÂà∞keyÂØπÂ∫îÁöÑvalueÔºåËøòÂèØ‰ª•ÂØπh[key]ËøõË°åËµãÂÄºÊìç‰ΩúÔºåÊîπÂèòkeyÂØπÂ∫îÁöÑvalue„ÄÇ</code></pre><h1 id="‰ΩçËøêÁÆó‰∏éÂ∏∏Áî®Â∫ìÂáΩÊï∞"><a href="#‰ΩçËøêÁÆó‰∏éÂ∏∏Áî®Â∫ìÂáΩÊï∞" class="headerlink" title="‰ΩçËøêÁÆó‰∏éÂ∏∏Áî®Â∫ìÂáΩÊï∞"></a>‰ΩçËøêÁÆó‰∏éÂ∏∏Áî®Â∫ìÂáΩÊï∞</h1><h2 id="‰ΩçËøêÁÆó"><a href="#‰ΩçËøêÁÆó" class="headerlink" title="‰ΩçËøêÁÆó"></a>‰ΩçËøêÁÆó</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&amp; ‰∏é</span><br><span class="line">| Êàñ</span><br><span class="line">~ Èùû</span><br><span class="line">^ ÂºÇÊàñ</span><br><span class="line">&gt;&gt; Âè≥Áßª</span><br><span class="line">&lt;&lt; Â∑¶Áßª</span><br><span class="line"></span><br><span class="line">Â∏∏Áî®Êìç‰ΩúÔºö</span><br><span class="line">(<span class="number">1</span>)Ê±ÇxÁöÑÁ¨¨k‰ΩçÊï∞Â≠ó  x &gt;&gt; k &amp; <span class="number">1</span></span><br><span class="line">(<span class="number">2</span>)<span class="built_in">lowbit</span>(x) = x &amp; -xÔºåËøîÂõûxÁöÑÊúÄÂêé‰∏Ä‰Ωç<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="Â∏∏Áî®Â∫ìÂáΩÊï∞"><a href="#Â∏∏Áî®Â∫ìÂáΩÊï∞" class="headerlink" title="Â∏∏Áî®Â∫ìÂáΩÊï∞"></a>Â∏∏Áî®Â∫ìÂáΩÊï∞</h2><p><font color="red"><strong>reverse ÁøªËΩ¨</strong></font></p><pre><code>ÁøªËΩ¨‰∏Ä‰∏™vectorÔºöreverse(a.begin(), a.end());ÁøªËΩ¨‰∏Ä‰∏™Êï∞ÁªÑÔºåÂÖÉÁ¥†Â≠òÊîæÂú®‰∏ãÊ†á1~nÔºöreverse(a + 1, a + 1 + n);</code></pre><p><font color="red"><strong>unique ÂéªÈáç</strong></font></p><pre><code>ËøîÂõûÂéªÈáç‰πãÂêéÁöÑÂ∞æËø≠‰ª£Âô®ÔºàÊàñÊåáÈíàÔºâÔºå‰ªçÁÑ∂‰∏∫ÂâçÈó≠ÂêéÂºÄÔºåÂç≥Ëøô‰∏™Ëø≠‰ª£Âô®ÊòØÂéªÈáç‰πãÂêéÊú´Â∞æÂÖÉÁ¥†ÁöÑ‰∏ã‰∏Ä‰∏™‰ΩçÁΩÆ„ÄÇËØ•ÂáΩÊï∞Â∏∏Áî®‰∫éÁ¶ªÊï£ÂåñÔºåÂà©Áî®Ëø≠‰ª£Âô®ÔºàÊàñÊåáÈíàÔºâÁöÑÂáèÊ≥ïÔºåÂèØËÆ°ÁÆóÂá∫ÂéªÈáçÂêéÁöÑÂÖÉÁ¥†‰∏™Êï∞„ÄÇÊää‰∏Ä‰∏™vectorÂéªÈáçÔºöint m =unique(a.begin(), a.end()) ‚Äì a.begin();Êää‰∏Ä‰∏™Êï∞ÁªÑÂéªÈáçÔºåÂÖÉÁ¥†Â≠òÊîæÂú®‰∏ãÊ†á1~nÔºöint m = unique(a + 1, a + 1 + n) ‚Äì (a + 1);</code></pre><p><font color="red"><strong>random_shuffle ÈöèÊú∫Êâì‰π±</strong></font></p><pre><code>Áî®Ê≥ï‰∏éreverseÁõ∏Âêå</code></pre><p><font color="red"><strong>sort</strong></font></p><pre><code>ÂØπ‰∏§‰∏™Ëø≠‰ª£Âô®ÔºàÊàñÊåáÈíàÔºâÊåáÂÆöÁöÑÈÉ®ÂàÜËøõË°åÂø´ÈÄüÊéíÂ∫è„ÄÇÂèØ‰ª•Âú®Á¨¨‰∏â‰∏™ÂèÇÊï∞‰º†ÂÖ•ÂÆö‰πâÂ§ßÂ∞èÊØîËæÉÁöÑÂáΩÊï∞ÔºåÊàñËÄÖÈáçËΩΩ‚ÄúÂ∞è‰∫éÂè∑‚ÄùËøêÁÆóÁ¨¶„ÄÇÊää‰∏Ä‰∏™intÊï∞ÁªÑÔºàÂÖÉÁ¥†Â≠òÊîæÂú®‰∏ãÊ†á1~nÔºâ‰ªéÂ§ßÂà∞Â∞èÊéíÂ∫èÔºå‰º†ÂÖ•ÊØîËæÉÂáΩÊï∞Ôºöint a[MAX_SIZE];bool cmp(int a, int b) &#123;return a &gt; b; &#125;sort(a + 1, a + 1 + n, cmp);ÊääËá™ÂÆö‰πâÁöÑÁªìÊûÑ‰ΩìvectorÊéíÂ∫èÔºåÈáçËΩΩ‚ÄúÂ∞è‰∫éÂè∑‚ÄùËøêÁÆóÁ¨¶Ôºö</code></pre><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">rec</span>&#123; <span class="type">int</span> id, x, y; &#125;</span><br><span class="line">vector&lt;rec&gt; a;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span> &lt;(<span class="type">const</span> rec &amp;a, <span class="type">const</span> rec &amp;b) &#123;</span><br><span class="line"><span class="keyword">return</span> a.x &lt; b.x || a.x == b.x &amp;&amp; a.y &lt; b.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br></pre></td></tr></table></figure><p><font color="red"><strong>lower_bound&#x2F;upper_bound  ‰∫åÂàÜ</strong></font></p><pre><code>lower_bound ÁöÑÁ¨¨‰∏â‰∏™ÂèÇÊï∞‰º†ÂÖ•‰∏Ä‰∏™ÂÖÉÁ¥†xÔºåÂú®‰∏§‰∏™Ëø≠‰ª£Âô®ÔºàÊåáÈíàÔºâÊåáÂÆöÁöÑÈÉ®ÂàÜ‰∏äÊâßË°å‰∫åÂàÜÊü•ÊâæÔºåËøîÂõûÊåáÂêëÁ¨¨‰∏Ä‰∏™Â§ß‰∫éÁ≠â‰∫éxÁöÑÂÖÉÁ¥†ÁöÑ‰ΩçÁΩÆÁöÑËø≠‰ª£Âô®ÔºàÊåáÈíàÔºâupper_bound ÁöÑÁî®Ê≥ïÂíålower_boundÂ§ßËá¥Áõ∏ÂêåÔºåÂîØ‰∏ÄÁöÑÂå∫Âà´ÊòØÊü•ÊâæÁ¨¨‰∏Ä‰∏™Â§ß‰∫éxÁöÑÂÖÉÁ¥†„ÄÇÂΩìÁÑ∂Ôºå‰∏§‰∏™Ëø≠‰ª£Âô®ÔºàÊåáÈíàÔºâÊåáÂÆöÁöÑÈÉ®ÂàÜÂ∫îËØ•ÊòØÊèêÂâçÊéíÂ•ΩÂ∫èÁöÑ„ÄÇÂú®ÊúâÂ∫èintÊï∞ÁªÑÔºàÂÖÉÁ¥†Â≠òÊîæÂú®‰∏ãÊ†á1~nÔºâ‰∏≠Êü•ÊâæÂ§ß‰∫éÁ≠â‰∫éxÁöÑÊúÄÂ∞èÊï¥Êï∞ÁöÑ‰∏ãÊ†áÔºöint I = lower_bound(a + 1, a + 1 + n,. x) ‚Äì a;Âú®ÊúâÂ∫èvector&lt;int&gt; ‰∏≠Êü•ÊâæÂ∞è‰∫éÁ≠â‰∫éxÁöÑÊúÄÂ§ßÊï¥Êï∞ÔºàÂÅáËÆæ‰∏ÄÂÆöÂ≠òÂú®ÔºâÔºöint y = *--upper_bound(a.begin(), a.end(), x);</code></pre>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Êú¨ÁßëËØæÁ®ã </tag>
            
            <tag> ÁºñÁ®ãËØ≠Ë®Ä </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
